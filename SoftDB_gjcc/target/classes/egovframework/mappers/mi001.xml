<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="mi001">
	   <resultMap id="boardSearchResult" type="map" >
	        <result property="COMM_CNTN" column="COMM_CNTN" jdbcType="CLOB" javaType="java.lang.String" />
	    </resultMap>
       
       <select id="cnltStatisticsList"  parameterType="map" resultType="map">	
		<if test="rows != null and page != null">
		SELECT *
        FROM
        (
            SELECT A1.*
                ,   CEIL((ROW_NUMBER() OVER(ORDER BY ROWNUM)) / #{rows}) PAGENUM
                ,   CEIL(COUNT(1) OVER() / #{rows}) TOTPAGECOUNT
                ,   CEIL(COUNT(1) OVER()) TOTROWCOUNT
            FROM
            (
         </if>   
			select 	A.DEPT_NM as dept_nm
					, A.USR_NM
					, NVL((select DISTINCT count(*) over()
					    from mi001 c where c.org_usr_id =A.ORG_USR_ID
					    AND TO_DATE(c.crt_dt, 'YYYYMMDD') between TO_DATE(#{frDt}, 'YYYYMMDD') and TO_DATE(#{toDt}, 'YYYYMMDD') ),'0') as tot
					, A.org_usr_id as org_usr_id
					, A.dept_id as dept_id
					, A.org_id as org_id
					, NVL((select DISTINCT count(*) over()
					    from mi001 c where 1= 1					
					    and c.org_usr_id =A.ORG_USR_ID 
					    and c.NEW_YN='Y'
						AND TO_DATE(c.crt_dt, 'YYYYMMDD') between TO_DATE(#{frDt}, 'YYYYMMDD') and TO_DATE(#{toDt}, 'YYYYMMDD')
					    ),'0') as new_req
					, NVL((select DISTINCT count(*) over()					   
					    from mi001 c where  1= 1 
					    and c.org_usr_id =A.ORG_USR_ID
					    and c.NEW_YN='N'
						AND TO_DATE(c.crt_dt, 'YYYYMMDD') between TO_DATE(#{frDt}, 'YYYYMMDD') and TO_DATE(#{toDt}, 'YYYYMMDD')
					    ),'0') as mod_req
					, NVL((select DISTINCT count(*) over()
					    from mi001 c where  1= 1 
					    and c.org_usr_id =A.ORG_USR_ID 
					    and c.NEW_YN='D'
						AND TO_DATE(c.crt_dt, 'YYYYMMDD') between TO_DATE(#{frDt}, 'YYYYMMDD') and TO_DATE(#{toDt}, 'YYYYMMDD')
					    ),'0') as del_req
					, NVL((select DISTINCT count(*) over()
					    from mi001 c where  1= 1
					    and c.org_usr_id =A.ORG_USR_ID 
					    and c.RTN_RSN='D'
						AND TO_DATE(c.crt_dt, 'YYYYMMDD') between TO_DATE(#{frDt}, 'YYYYMMDD') and TO_DATE(#{toDt}, 'YYYYMMDD')
					    ),'0') as rtn_req    
					from om061 A join(select org_id, dept_id from od051 where LVL = '2') B 
					on A.dept_id = B.dept_id 
					AND A.org_id = B.org_id 
					AND use_yn ='Y'
				 	
				 	<if test="org_usr_id != null and !org_usr_id.equals('all')">
					AND A.org_usr_id =#{org_usr_id}
					</if>
					
					<if test="dept_id != null and !dept_id.equals('all')">
					AND A.dept_id = #{dept_id}
					</if>
					
					<if test="org_id != null and !org_id.equals('all')">
					AND A.org_id = #{org_id}
					</if>	 
					order by org_id asc, dept_id asc, usr_nm asc
			<if test="rows != null and page != null">
					 ) A1
	        )
	        WHERE PAGENUM = #{page}
	        </if>
		</select>
       
		<select id="chargerList" resultType="map">	
			SELECT ORG_FUL_NM
				   ,	ORG_ID
				   , 	DEPT_ID 
				   ,	USE_YN
				   FROM OD051 
				   WHERE 1 =1 
				  		 AND LVL = '2'
				  		 AND USE_YN = 'Y'		
		</select>
		
		<select id="selectList" parameterType="map" resultType="map">
		<if test="rows != null and page != null">
        SELECT *
        FROM
        (
            SELECT A1.*
                ,   CEIL((ROW_NUMBER() OVER(ORDER BY ROWNUM)) / #{rows}) PAGENUM
                ,   CEIL(COUNT(1) OVER() / #{rows}) TOTPAGECOUNT
                ,   CEIL(COUNT(1) OVER()) TOTROWCOUNT
            FROM
            (
        </if>
        			SELECT 	REQ_ID AS COMM_ID
        					,	tbbs_id
        					,	usr_id
        					,	cntr_nm
        					,	team_nm
        					,	org_usr_id
        					,	(SELECT USR_NM FROM OM061 WHERE OM061.ORG_USR_ID = A.org_usr_id) AS ORG_USR_ID_NM
        					, 	dept_id
        					,	org_id
        					<!--,	CTG_EX_CD AS INTV_EX_CD-->
        					,	CTG_LG_CD AS INTV_LG_CD
        					,	CTG_MD_CD AS INTV_MD_CD
        					,	CTG_SM_CD AS INTV_SM_CD
        					,	cdb_gb_cd
							<!--, 	(SELECT CTG_CD_NM FROM OM020 WHERE CTG_LVL = '1' AND CTG_CD = CTG_EX_CD) AS INTV_EX_NM
							, 	(SELECT CTG_CD_NM FROM OM020 WHERE CTG_LVL = '2' AND CTG_CD = CTG_LG_CD) AS INTV_LG_NM
							, 	(SELECT CTG_CD_NM FROM OM020 WHERE CTG_LVL = '3' AND PARNT_CD = CTG_LG_CD AND CTG_CD = CTG_MD_CD) AS INTV_MD_NM
							, 	(SELECT CTG_CD_NM FROM OM020 WHERE CTG_LVL = '4' AND PARNT_CD = CTG_MD_CD AND CTG_CD = CTG_SM_CD) AS INTV_SM_NM-->
                  			, 	(SELECT CTG_CD_NM FROM OM020 WHERE CTG_LVL = '1' AND CTG_CD = CTG_LG_CD) AS INTV_LG_NM
                  			, 	(SELECT CTG_CD_NM FROM OM020 WHERE CTG_LVL = '2' AND PARNT_CD = CTG_LG_CD AND CTG_CD = CTG_MD_CD) AS INTV_MD_NM
                  			, 	(SELECT CTG_CD_NM FROM OM020 WHERE CTG_LVL = '3' AND PARNT_CD = CTG_MD_CD AND CTG_CD = CTG_SM_CD) AS INTV_SM_NM
 							,	(<!--CASE NVL(A.ctg_ex_cd, '') WHEN '' THEN '' ELSE(-->
								<!--CASE NVL(A.ctg_lg_cd, '') WHEN '' THEN-->
								CASE NVL(A.ctg_lg_cd, '') WHEN '' THEN '' ELSE(
								<!--(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1') ELSE (-->
								CASE NVL(A.ctg_md_cd, '') WHEN '' THEN
								<!--(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '2') ELSE (-->
								(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '1') ELSE (
								CASE NVL(A.ctg_sm_cd, '') WHEN '' THEN
								<!--(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '2')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_md_cd AND ctg_lvl = '3') ELSE(
								(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '2')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_md_cd AND ctg_lvl = '3')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_sm_cd AND ctg_lvl = '4')-->
								(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '1')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_md_cd AND ctg_lvl = '2') ELSE(
								(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '1')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_md_cd AND ctg_lvl = '2')
								|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_sm_cd AND ctg_lvl = '3')
								)END) END) END) <!--END)--> AS intv_nm
                  			, 	DBMS_LOB.SUBSTR(REQ_CONT_C, 100, 1) AS COMM_CNTN  /* 100자리까지만 조회 */
        					,	REQ_TTL AS COMM_TTL
        					,	PROC_ST_CD AS PROG_KND_CD
        					,	(select sm.cd_nm from sm002 sm where sm.tp_cd = '90260' AND sm.cd = PROC_ST_CD) AS prog_knd_nm
        					,	ACT_CONT AS RESP_CNTN
        					,	use_yn
                   			,	DECODE(NEW_YN, 'Y','신규','N','수정','삭제')  AS COMM_NEW 
        					, 	getFormatdate(crt_dt)||' '||getFormatTime(crt_tm) AS crt_dttm
        					,	getFormatDate(crt_dt) AS crt_dt_format
        					,	getFormatTime(crt_tm) AS crt_tm_format
        					,	crt_usr_id
        					, 	(SELECT USR_NM from om001 where usr_id = A.crt_usr_id) AS crt_usr_nm
        					, 	DECODE(PROC_ST_CD, '90261','',getFormatdate(mod_dt)||' '||getFormatTime(mod_tm)) AS mod_dttm
        					,	DECODE(PROC_ST_CD, '90261','', getFormatDate(mod_dt)) AS mod_dt_format
        					,	DECODE(PROC_ST_CD, '90261','', getFormatTime(mod_tm)) AS mod_tm_format
        					,	DECODE(PROC_ST_CD, '90261','', mod_usr_id) AS mod_usr_id
        					,	DECODE(PROC_ST_CD, '90261','', (SELECT USR_NM from om001 where usr_id = A.mod_usr_id)) AS mod_usr_nm 
        					,	CASE WHEN usr_id = #{login_usr_id} then 'Y' else 'N' END AS is_own 
        			FROM mi001 A
        			WHERE use_yn = 'Y'
					<!--
        			<if test="intv_ex_cd != null and !intv_ex_cd.equals('all')">
        				and CTG_EX_CD = #{intv_ex_cd}
        			</if>
        			-->
        			<if test="intv_lg_cd != null and !intv_lg_cd.equals('all')">
        				and CTG_LG_CD = #{intv_lg_cd}
        			</if>       			
        			<if test="intv_md_cd != null and !intv_md_cd.equals('all')">
        				and CTG_MD_CD = #{intv_md_cd}
        			</if>
        			<if test="intv_sm_cd != null and !intv_sm_cd.equals('all')">
        				and CTG_SM_CD = #{intv_sm_cd}
        			</if>
        			<if test="org_usr_id != null and !org_usr_id.equals('all')">
        				and org_usr_id = #{org_usr_id}
        			</if>
					<if test="dept_id != null and !dept_id.equals('all')">
        				and dept_id = #{dept_id}
        			</if>
        			<if test="cdb_gb_cd != null and !cdb_gb_cd.equals('all')">
        				and cdb_gb_cd = #{cdb_gb_cd}
        			</if>
        			<if test="new_yn != null and !new_yn.equals('all')">
        				and new_yn = #{new_yn}
        			</if>
        			<if test="prog_knd_cd != null and !prog_knd_cd.equals('all')">
        				and PROC_ST_CD = #{prog_knd_cd}
        			</if>
        			<if test="usr_id != null and !usr_id.equals('all')">
        				and USR_ID = #{usr_id}
        			</if>
        			AND TO_DATE(crt_dt, 'YYYYMMDD') between TO_DATE(#{frDt}, 'YYYYMMDD') and TO_DATE(#{toDt}, 'YYYYMMDD')
        			<if test="usr_grd_cd != null">
        				and usr_id = #{login_usr_id}
        			</if>
        			<if test="sidx != null and sord != null">
                ORDER BY ${sidx} ${sord}
            </if>
             <if test="rows != null and page != null">
	            ) A1
	        )
	        WHERE PAGENUM = #{page}
        	</if>
		</select>
		
		<select id="select" parameterType="map" resultMap="boardSearchResult">
			SELECT 	REQ_ID AS COMM_ID
					,	tbbs_id
					,	usr_id
					,	cntr_nm
					,	team_nm
					,	usr_nm
	       			,	org_usr_id
	       			<if test="org_usr_id != null and !org_usr_id.equals('all')">
	       			,	(SELECT USR_NM FROM OM061 WHERE OM061.ORG_USR_ID = #{org_usr_id}) AS ORG_USR_ID_NM
	       			</if>      			
        			,	org_id
        			, 	dept_id
        			<if test="dept_id != null and !dept_id.equals('all')">
        			,	(SELECT ORG_FUL_NM FROM OD051 WHERE OD051.DEPT_ID = #{dept_id} and OD051.ORG_ID = #{org_id}) AS DEPT_ID_NM
        			</if> 
        			,	act_cont
        			,   RTN_RSN
					<!--,	CTG_EX_CD AS INTV_EX_CD-->
					,	CTG_LG_CD AS INTV_LG_CD
					,	CTG_MD_CD AS INTV_MD_CD
					,	CTG_SM_CD AS INTV_SM_CD
					,	cdb_gb_cd
					,	REQ_CONT_C AS COMM_CNTN
					,	ACT_CONT AS RESP_CNTN
					,	REQ_TTL AS COMM_TTL
					,	PROC_ST_CD AS PROG_KND_CD
					,	USE_YN
					,	NEW_YN
					, 	getFormatdate(crt_dt)||' '||getFormatTime(crt_tm) AS crt_dttm
					, 	DECODE(PROC_ST_CD, '90261','',getFormatdate(mod_dt)||' '||getFormatTime(mod_tm)) AS mod_dttm
        			,   DECODE(PROC_ST_CD,'90261','','90262','','90264','',(getFormatdate(act_dt)||' '||getFormatTime(act_tm))) AS pro_dttm
					,	DECODE(NEW_YN, 'Y','신규','N','수정','삭제')  AS COMM_NEW 
					,	getFormatDate(crt_dt) AS crt_dt_format
					,	getFormatTime(crt_tm) AS crt_tm_format
					, 	(SELECT USR_NM from om001 where usr_id = A.crt_usr_id) AS crt_usr_nm
					, 	DECODE(PROC_ST_CD, '90261','', getFormatDate(mod_dt)) AS mod_dt_format 
					, 	DECODE(PROC_ST_CD, '90261','', getFormatTime(mod_tm)) AS mod_tm_format 
					, 	DECODE(PROC_ST_CD, '90261','', mod_usr_id) AS mod_usr_id 
					,	DECODE(PROC_ST_CD, '90261','', (SELECT USR_NM from om001 where usr_id = A.mod_usr_id)) AS mod_usr_nm
					<!--,	(CASE NVL(A.ctg_ex_cd, '') WHEN '' THEN '' ELSE(
					CASE NVL(A.ctg_lg_cd, '') WHEN '' THEN
					(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1') ELSE (
					CASE NVL(A.ctg_md_cd, '') WHEN '' THEN
					(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1')
					|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '2') ELSE (
					CASE NVL(A.ctg_sm_cd, '') WHEN '' THEN
					(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1')
					|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '2')
					|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_md_cd AND ctg_lvl = '3') ELSE(
					(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_ex_cd AND ctg_lvl = '1')
					|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '2')
					|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_md_cd AND ctg_lvl = '3')
					|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_sm_cd AND ctg_lvl = '4')
					)END) END) END) END) AS intv_nm-->
					,	CASE NVL(A.ctg_lg_cd, '') WHEN '' THEN ELSE (
						CASE NVL(A.ctg_md_cd, '') WHEN '' THEN 		
						(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '1')  ELSE (
						CASE NVL(A.ctg_md_cd, '') WHEN '' THEN
						(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '1')
						|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_nd_cd AND ctg_lvl = '2') ELSE(
						(SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_lg_cd AND ctg_lvl = '1')
						|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_md_cd AND ctg_lvl = '2')
						|| ' > ' || (SELECT ctg_cd_nm FROM om020 WHERE ctg_cd = A.ctg_sm_cd AND ctg_lvl = '3')
						)END) END) END) END) AS intv_nm 
			FROM mi001 A
			WHERE REQ_ID = #{comm_id}
		</select>
		  <select id="nextval" parameterType="map" resultType="map">
	        SELECT  smi001.NEXTVAL req_id
	          FROM  dual
	    </select>
		<insert id="insert" parameterType="map">
			 {call
        declare
        begin   
      			INSERT INTO mi001
      			(
      					REQ_ID
      				,	tbbs_id
      				,	usr_id
      				,	cntr_nm
      				,	team_nm
      				,	usr_nm
       				,	org_id
      				,	dept_id
      				<!--,	ctg_ex_cd-->
      				,	ctg_lg_cd
      				,	ctg_md_cd
      				,	ctg_sm_cd
      				,	cdb_gb_cd
      				,	req_cont_c
      				,	req_ttl
      				,	proc_st_cd
      				,	use_yn
      				,	new_yn
      				,	crt_dt
      				,	crt_tm
      				,	crt_usr_id
      				,	mod_dt
      				,	mod_tm
      				,	mod_usr_id
      			)
      			VALUES
      			(
      					#{req_id}
      				,	#{tbbs_id}
      				,	#{login_usr_id}
      				,	(select cd_nm from sm002 where tp_cd = '90002' and cd = (select cntr_cd from om001 where usr_id = #{login_usr_id}))
      				,	(select cd_nm from sm002 where tp_cd = '90003' and cd = (select team_cd from om001 where usr_id = #{login_usr_id}))
      				,	#{login_usr_nm}
      				,	#{org_id}
      				,	#{dept_id}
      				<!--,	#{intv_ex_cd}-->
      				,	#{intv_lg_cd}
      				,	#{intv_md_cd}
      				,	#{intv_sm_cd}
      				,	#{cdb_gb_cd}
      				,	Empty_Clob() 
      				,	#{comm_ttl}
      				,	#{prog_knd_cd}
      				,	'Y'
      				,	#{new_yn}
      				,	to_char(sysdate, 'yyyymmdd')
      				,	to_char(sysdate, 'hh24miss')
      				,	#{login_usr_id}
      				,	to_char(sysdate, 'yyyymmdd')
      				,	to_char(sysdate, 'hh24miss')
      				,	#{login_usr_id}	
      			);
      			
      			UPDATE mi001
               SET REQ_CONT_C = #{comm_cntn, jdbcType = CLOB}
             WHERE REQ_ID = #{req_id};
			 end
    }
		</insert>
	
	
	<update id="getJsonStrChargerInsert" parameterType="map">
			UPDATE mi001
				SET proc_st_cd = #{proc_st_cd}
					,	org_usr_id = #{org_usr_id}
					,	act_cont = #{act_cont}
					,	rtn_rsn = #{rtn_rsn}
			WHERE REQ_ID = #{req_id}
	</update>
	
	
		<update id="update" parameterType="map">
			UPDATE mi001
			<if test="use_yn == null">
				SET 
						<!--CTG_EX_CD = #{intv_ex_cd}-->
					<!--,	CTG_LG_CD = #{intv_lg_cd}-->
						CTG_LG_CD = #{intv_lg_cd}
					,	CTG_MD_CD = #{intv_md_cd}
					,	CTG_SM_CD = #{intv_sm_cd}
					,	cdb_gb_cd = #{cdb_gb_cd}
					,	REQ_CONT_C = #{comm_cntn, jdbcType = CLOB}
					,	REQ_TTL = #{comm_ttl}	
					,	mod_dt = to_char(sysdate, 'yyyymmdd')
					,	mod_tm = to_char(sysdate, 'hh24miss')
					,	mod_usr_id = #{login_usr_id}
					<if test="new_yn != null and !new_yn.equals('all')">
					,	new_yn = #{new_yn}
					</if>	
					
			</if>
			<if test="use_yn != null">
					SET	use_yn = #{use_yn}
					<!--
					<if test="intv_ex_cd != null">					
					,	CTG_EX_CD = #{intv_ex_cd}
					</if>
					-->
					<if test="intv_lg_cd != null">	
					,	CTG_LG_CD = #{intv_lg_cd}
					</if>
					<if test="intv_md_cd != null">	
					,	CTG_MD_CD = #{intv_md_cd}
					</if>
					<if test="intv_sm_cd != null">	
					,	CTG_SM_CD = #{intv_sm_cd}
					</if>
					,	cdb_gb_cd = #{cdb_gb_cd}
					,	REQ_CONT_C = #{comm_cntn, jdbcType = CLOB}
					,	REQ_TTL = #{comm_ttl}
					,	mod_dt = to_char(sysdate, 'yyyymmdd')
					,	mod_tm = to_char(sysdate, 'hh24miss')
					,	mod_usr_id = #{login_usr_id}
					<if test="new_yn != null and !new_yn.equals('all')">
					,	new_yn = #{new_yn}
					</if>	
					
			</if>
			WHERE REQ_ID = #{comm_id}
	</update>
	<update id="save" parameterType="map">
		UPDATE mi001
			SET
			<if test="tbbs_id != null">
					tbbs_id = #{tbbs_id}
			</if>
			<if test="tbbs_id == null">
					PROC_ST_CD = #{prog_knd_cd}
				<if test="resp_cntn != null">
				,	ACT_CONT = #{resp_cntn}
				</if>
				,	mod_dt = to_char(sysdate, 'yyyymmdd')
				,	mod_tm = to_char(sysdate, 'hh24miss')
				,	mod_usr_id = #{login_usr_id}
			</if>
		WHERE REQ_ID = #{comm_id}
	</update>
	<select id="dselectList" parameterType="map" resultType="map"> 
        <if test="rows != null and page != null">
        SELECT *
        FROM
        (
            SELECT A1.*
                ,   CEIL((ROW_NUMBER() OVER(ORDER BY ROWNUM)) / #{rows}) PAGENUM
                ,   CEIL(COUNT(1) OVER() / #{rows}) TOTPAGECOUNT
                ,   CEIL(COUNT(1) OVER()) TOTROWCOUNT
            FROM
            (
        </if>
              select
                  usr_nm as USR_NM
                  ,sum(decode(CDB_REQ_GB_CD,'010100',1,0)) as new_is
                  ,sum(decode(CDB_REQ_GB_CD,'020100',1,0)) as new_up
                  ,sum(decode(CDB_REQ_GB_CD,'030100',1,0)) as new_dl
                  ,count(CDB_REQ_GB_CD) as new_total
                  from om015
               where 1 = 1
         <if test="usr_nm != null and !usr_nm.equals('')">
             <if test="usr_nm != all and !usr_nm.equals('all')">
                AND usr_id like #{usr_nm} || '%'
             </if>
        </if>
        <if test="tbbs_strt_dt != null and !tbbs_strt_dt.equals('')">
            AND crt_dt between #{tbbs_strt_dt} and #{tbbs_end_dt}
        </if>
            group by usr_nm
        <if test="sidx != null and sord != null">
            ORDER BY ${sidx} ${sord}
        </if>
        <if test="rows != null and page != null">
            ) A1
        )
        WHERE PAGENUM = #{page}
        </if>
    </select>
</mapper>