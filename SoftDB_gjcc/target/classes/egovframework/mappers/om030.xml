<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="om030">
  <resultMap id="messageSearchResult" type="map" >
    <result property="NOTE_CNTN" column="NOTE_CNTN" jdbcType="CLOB" javaType="java.lang.String" />
  </resultMap>
  
	<select id="selectList" parameterType="map" resultType="map">
  <!-- <select id="selectList" parameterType="map" resultMap="messageSearchResult"> -->
	    <if test="rows != null and page != null">
	    SELECT 
			  msg_kind
			, snd_ttl  
	<!-- 		, DBMS_LOB.SUBSTR(REGEXP_REPLACE(note_cntn, <![CDATA['<[^>]*>|\&([^;])*;']]> , ''), 40, 1) AS note_cntn -->
			, DBMS_LOB.SUBSTR(REGEXP_REPLACE(DBMS_LOB.SUBSTR(note_cntn, 2000, 1), <![CDATA['<[^>]*>|\&([^;])*;']]> , ''),40,1) AS note_cntn
			, fl_num
			, snd_dttm
			, DECODE(read_yn,null,'미확인','확인') AS read_yn
			, snd_usr_nm
			, note_id
			, PAGENUM
			, TOTPAGECOUNT
			, TOTROWCOUNT
	    FROM
	    (
	      SELECT A1.*
	        , CEIL((ROW_NUMBER() OVER(ORDER BY ROWNUM)) / #{rows}) PAGENUM
	        , CEIL(COUNT(1) OVER() / #{rows}) TOTPAGECOUNT
	        , CEIL(COUNT(1) OVER()) TOTROWCOUNT
	      FROM
	      (
	    </if>
		<if test = "optMsgList.equals('all') or optMsgList.equals('sndMsgList')">
		SELECT LT2.msg_kind
			   , LT1.snd_ttl		
		     , LT1.snd_cont_c AS note_cntn
		     , LT2.fl_num
		     , LT2.snd_dttm
		     , LT2.read_yn AS read_yn
		     , LT2.snd_usr_nm
		     , LT2.note_id
		  FROM om030 LT1
		     , ( 
		        SELECT DISTINCT 1
		          , '수신' AS msg_kind
		          , (case when t3.fl_num IS NULL then '0' else t3.fl_num end) AS fl_num
		          , getFormatdate(T1.SND_DT)||' '||getFormatTime(t1.snd_tm) AS snd_dttm
		          , nvl2(t2.fst_rd_dt, getFormatdate(T2.fst_rd_dt) || ' ' || getFormatTime(t2.fst_rd_tm), '') AS read_yn
		          , t1.snd_usr_nm As snd_usr_nm
		          , t1.note_id AS note_id
		        FROM om030 t1 
		             left join om031 t2 ON t1.note_id = t2.note_id
		             left join (SELECT tbl_pk, TO_CHAR(COUNT(fl_id)) AS fl_num FROM om019 WHERE tbl_nm = 'om030' GROUP BY tbl_pk) t3 on t3.tbl_pk = to_char(t1.note_id)
		        WHERE  t2.rcv_usr_id = #{login_usr_id}
		          AND  t2.use_yn = 'Y'
		          <if test = "msg_usr_id != null and !msg_usr_id.equals('all')">
		          AND t1.snd_usr_id = #{msg_usr_id}
		          </if>
		          <if test = "tfStartDt != null and !tfStartDt.equals('')">
		          AND t1.snd_dt between #{tfStartDt} and #{tfEndDt}
		          </if>
		          <if test = "tfMsg != null and !tfMsg.equals('')">
		          AND t1.SND_TTL like '%' || #{ tfMsg } || '%'
		          </if>
		       ) LT2
		 WHERE LT1.note_id = LT2.note_id 
		</if>
		<if test = "optMsgList.equals('all')">
		UNION ALL
		</if>
		<if test = "optMsgList.equals('all') or optMsgList.equals('rcvMsgList')">
		SELECT LT2.msg_kind
			   , LT1.snd_ttl	
		     , LT1.snd_cont_c AS note_cntn
		     , LT2.fl_num
		     , LT2.snd_dttm
		      , '' AS read_yn
		     , LT2.snd_usr_nm
		     , LT2.note_id
		  FROM om030 LT1
		     , (      
		        SELECT DISTINCT 1
		          , '발신' AS msg_kind
		          , (case when t3.fl_num IS NULL then '0' else t3.fl_num end) AS fl_num
		          , getFormatdate(t1.snd_dt)||' '||getFormatTime(t1.snd_tm) AS snd_dttm
		          , t1.snd_usr_nm As snd_usr_nm
		          , t1.note_id AS note_id
		        FROM  om030 t1 
		              left join om031 t2 ON t1.note_id = t2.note_id
		              left join (SELECT tbl_pk, TO_CHAR(COUNT(fl_id)) AS fl_num FROM om019 WHERE tbl_nm = 'om030' GROUP BY tbl_pk) t3 on t3.tbl_pk = to_char(t1.note_id)
		        WHERE 1 = 1  
		          <if test = "usrGrd != null and !usrGrd.equals('gmanager')">
		        	<!-- AND t1.snd_usr_id = #{login_usr_id} -->
		        	AND t1.snd_usr_id = #{msg_usr_id}
		          </if>
		          AND  t1.use_yn = 'Y'
		          <if test = "msg_usr_id != null and !msg_usr_id.equals('all')">
		          <!-- AND t2.rcv_usr_id = #{msg_usr_id} -->
		          AND t2.rcv_usr_id = #{login_usr_id}
		          </if>
		          <if test = "tfStartDt != null and !tfStartDt.equals('')">
		          AND t1.snd_dt between #{tfStartDt} and #{tfEndDt}
		          </if>
		          <if test = "tfMsg != null and !tfMsg.equals('')">
		          AND t1.SND_TTL like '%' || #{ tfMsg } || '%'
		          </if>
		       ) LT2      
		 WHERE LT1.note_id = LT2.note_id      
		</if>
		<if test="sidx != null and sord != null">
		ORDER BY ${sidx} ${sord}
		</if>
		<if test="rows != null and page != null">
		  ) A1
		)
		WHERE PAGENUM = #{page}
		</if>
 
<!-- 		
    <if test="rows != null and page != null">
		SELECT *
		FROM
		(
			SELECT A1.*
				,	CEIL((ROW_NUMBER() OVER(ORDER BY ROWNUM)) / #{rows}) PAGENUM
				,	CEIL(COUNT(1) OVER() / #{rows}) TOTPAGECOUNT
				,	CEIL(COUNT(1) OVER()) TOTROWCOUNT
			FROM
			(
		</if>
			<if test = "optMsgList.equals('all') or optMsgList.equals('sndMsgList')">
			SELECT 1
				, '수신' AS msg_kind
				, t1.snd_cont_c AS note_cntn_hidden
				, replace((case when LENGTH(t1.snd_cont_c) > 40 then substr(t1.snd_cont_c, 0, 40) || '...' else t1.snd_cont_c end), CHR(10), ' ') AS note_cntn
				, getFormatdate(T1.SND_DT)||' '||getFormatTime(t1.snd_tm) AS snd_dttm
				, nvl2(t2.fst_rd_dt, getFormatdate(T2.fst_rd_dt) || ' ' || getFormatTime(t2.fst_rd_tm), '') AS read_yn
				, t1.snd_usr_nm As snd_usr_nm
				, t1.note_id AS note_id
			FROM om030 t1 left join om031 t2 
			ON  t1.note_id = t2.note_id
			WHERE  t2.rcv_usr_id = #{login_usr_id}
				AND  t2.use_yn = 'Y'
				<if test = "msg_usr_id != null and !msg_usr_id.equals('all')">
				AND t1.snd_usr_id = #{msg_usr_id}
				</if>
				<if test = "tfStartDt != null and !tfStartDt.equals('')">
				AND t1.snd_dt between #{tfStartDt} and #{tfEndDt}
				</if>
				<if test = "tfMsg != null and !tfMsg.equals('')">
				AND t1.snd_cont_c like '%' || #{ tfMsg } || '%'
				</if>
			</if>
			<if test = "optMsgList.equals('all')">
			UNION ALL
			</if>
			<if test = "optMsgList.equals('all') or optMsgList.equals('rcvMsgList')">
			SELECT  1
				, '발신' AS msg_kind
				, t1.snd_cont_c AS note_cntn_hidden
				, replace((case when LENGTH(t1.snd_cont_c) > 40 then substr(t1.snd_cont_c, 0, 40) || '...' else t1.snd_cont_c end), CHR(10), ' ') AS note_cntn
				, getFormatdate(t1.snd_dt)||' '||getFormatTime(t1.snd_tm) AS snd_dttm
				, nvl2(t2.fst_rd_dt, getFormatdate(T2.fst_rd_dt) || ' ' || getFormatTime(t2.fst_rd_tm), '') AS read_yn
        , t2.rcv_usr_nm AS snd_usr_nm 
				, t1.note_id AS note_id
			FROM  om030 t1 left join om031 t2 
			ON  t1.note_id = t2.note_id
			WHERE  t1.snd_usr_id = #{login_usr_id}
				AND  t1.use_yn = 'Y'
				<if test = "msg_usr_id != null and !msg_usr_id.equals('all')">
				AND t2.rcv_usr_id = #{msg_usr_id}
				</if>
				<if test = "tfStartDt != null and !tfStartDt.equals('')">
				AND t1.snd_dt between #{tfStartDt} and #{tfEndDt}
				</if>
				<if test = "tfMsg != null and !tfMsg.equals('')">
				AND t1.snd_cont_c like '%' || #{ tfMsg } || '%'
				</if>
			</if>
			<if test="sidx != null and sord != null">
			ORDER BY ${sidx} ${sord}
			</if>
		<if test="rows != null and page != null">
			) A1
		)
 		WHERE PAGENUM = #{page}
 		</if> 
-->
	</select>
	
	<!-- <select id="select" parameterType="map" resultType="map"> -->
  <select id="select" parameterType="map" resultMap="messageSearchResult">
		SELECT	snd_ttl, note_id, snd_usr_id, snd_cont_c AS NOTE_CNTN , snd_dt, snd_tm
		  FROM  om030
		 WHERE  note_id = #{note_id}
	</select>
	
	<select id="nextval" parameterType="map" resultType="map">
		SELECT	som030.NEXTVAL note_id
		  FROM  dual
	</select>

	<insert id="insert" parameterType="map">
  {call
    declare
    begin  
  		INSERT  INTO om030 (note_id
  			 ,  snd_dt
  			 ,  snd_tm
  			 ,  cntr_nm 
  			 ,  team_nm
  			 ,  snd_usr_id
  			 ,  snd_usr_nm
  			 ,  snd_ttl
  			 ,  snd_cont_c
  			 ,  use_yn
  			 ,  crt_dt
  			 ,  crt_tm
  			 ,  crt_usr_id
  			 ,  mod_dt
  			 ,  mod_tm
  			 ,  mod_usr_id
  			) VALUES (#{note_id}
  			 ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
  			 ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
  			 ,  getCodeNM((select cntr_cd from om001 where usr_id = #{login_usr_id}),'90002')
  			 ,  getCodeNM((select team_cd from om001 where usr_id = #{login_usr_id}),'90003')
  			 ,  #{login_usr_id}
  			 ,  (select usr_nm from om001 where usr_id = #{login_usr_id})
  			 ,  #{note_ttl}
         	 ,  Empty_Clob()
  			 ,  'Y'
  			 ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
  			 ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
  			 ,  #{login_usr_id}
  			 ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
  			 ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
  			 ,  #{login_usr_id}
  		);
    
      UPDATE om030
         SET snd_cont_c = #{note_cntn, jdbcType = CLOB}
       WHERE note_id = #{note_id} ;
       
    end
<!--     
      INSERT  INTO om030 (note_id
         ,  snd_dt
         ,  snd_tm
         ,  cntr_nm 
         ,  team_nm
         ,  snd_usr_id
         ,  snd_usr_nm
         ,  snd_cont_c
         ,  use_yn
         ,  crt_dt
         ,  crt_tm
         ,  crt_usr_id
         ,  mod_dt
         ,  mod_tm
         ,  mod_usr_id
        ) VALUES (#{note_id}
         ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
         ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
         ,  getCodeNM((select cntr_cd from om001 where usr_id = #{login_usr_id}),'90002')
         ,  getCodeNM((select team_cd from om001 where usr_id = #{login_usr_id}),'90003')
         ,  #{login_usr_id}
         ,  (select usr_nm from om001 where usr_id = #{login_usr_id})
         ,  #{note_cntn} 
         ,  'Y'
         ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
         ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
         ,  #{login_usr_id}
         ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
         ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
         ,  #{login_usr_id}
      ) 
 -->         
  }    
	</insert>

	<insert id="insertBatch" parameterType="map">
		INSERT  INTO om031 (rcv_usr_id
			 ,  note_id
			 ,  cntr_nm
			 ,  team_nm 
			 ,  rcv_usr_nm
			 ,  use_yn
			 ,  arm_yn
			 ,  crt_dt
			 ,  crt_tm
			 ,  crt_usr_id
			 ,  mod_dt
			 ,  mod_tm
			 ,  mod_usr_id
			) VALUES (#{rcvn_usr_id}
			 ,  #{note_id}
			 ,  #{cntr_nm}
			 ,  #{team_nm} 
			 ,  #{rcvn_usr_nm}
			 ,  'Y'
			 ,	'N'
			 ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
			 ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
			 ,  #{login_usr_id}
			 ,   TO_CHAR(SYSDATE, 'YYYYMMDD')
			 ,   TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
			 ,  #{login_usr_id}
		)
	</insert>
	
	<update id="update" parameterType="map">
		UPDATE  om030
		   SET  /* snd_cont_c = #{note_cntn} */
            snd_cont_c = #{note_cntn, jdbcType = CLOB}
		     ,  mod_dt = TO_CHAR(SYSDATE, 'YYYYMMDD')
		     ,  mod_tm = TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
		     ,  mod_usr_id = #{login_usr_id}
		 WHERE  note_id = #{note_id}
	</update>
	
	<update id="delete" parameterType="map">
		UPDATE  om030
		   SET  use_yn = 'N'
		 WHERE  note_id = #{note_id}
	</update>
	
	<update id="updateRead" parameterType="map">
		UPDATE  om031 
		   SET  fst_rd_dt = TO_CHAR(SYSDATE, 'YYYYMMDD')
		     ,  fst_rd_tm = TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
		     ,	arm_yn = 'Y'
		 WHERE  note_id = #{note_id}
		  AND   rcv_usr_id = #{login_usr_id}
      AND   fst_rd_dt is null
      AND   fst_rd_tm is null
	</update>
	
	<update id="updateReadAlert" parameterType="map">
		UPDATE  om031 
		   SET  arm_yn = 'Y'
		 WHERE use_yn = 'Y'
			and rcv_usr_id = #{login_usr_id}
			and arm_yn = 'N'
			and fst_rd_dt is null
	</update>
	
	<update id="deleteReceive" parameterType="map">
	   UPDATE  om031
		  SET  use_yn = 'N'
		WHERE  note_id = #{note_id}
		  AND  rcv_usr_id = #{login_usr_id}
	</update>
	
	<update id="deleteAllReceive" parameterType="map">
	   UPDATE  om031
		  SET  use_yn = 'N'
		WHERE  note_id = #{note_id}
	</update>
	
	<select id="getMessageCnt" parameterType="map" resultType="map">
		select count(1) as cnt
		from om031
		where use_yn = 'Y'
			and rcv_usr_id = #{login_usr_id}
			and fst_rd_dt is null
	</select>
	
	<select id = "unconfirmCount" parameterType="map" resultType="map">
		SELECT COUNT(*) AS count
		FROM om031 
		WHERE rcv_usr_id = #{ login_usr_id } 
			AND fst_rd_dt is null
			AND use_yn = 'Y'
	</select>
	
	<select id="getMessageNotyetCount" parameterType="map" resultType="map">
		select
		(
			select count(1)
			from om031
			where use_yn = 'Y'
				and rcv_usr_id = #{login_usr_id}
				and arm_yn = 'N'
				and fst_rd_dt is null
				and crt_dt = to_char(sysdate, 'yyyymmdd')
		) as notarlmcnt
		,(
			select count(1)
			from om031
			where use_yn = 'Y'
				and rcv_usr_id = #{login_usr_id}
				and fst_rd_dt is null
				and crt_dt = to_char(sysdate, 'yyyymmdd')
		) as notreadmcnt
		from dual
	</select>
 
  <select id = "confirmList" parameterType="map" resultType="map">   
  <if test="rows != null and page != null">
    SELECT *
    FROM
    (
      SELECT A1.*
        , CEIL((ROW_NUMBER() OVER(ORDER BY ROWNUM)) / #{rows}) PAGENUM
        , CEIL(COUNT(1) OVER() / #{rows}) TOTPAGECOUNT
        , CEIL(COUNT(1) OVER()) TOTROWCOUNT
      FROM
      (
    </if>
       SELECT rcv_usr_nm 
            , rcv_usr_id
            , nvl2(fst_rd_dt, getFormatdate(fst_rd_dt) || ' ' || getFormatTime(fst_rd_tm), '') AS rcvn_dttm
         FROM om031
        WHERE use_yn = 'Y'
          AND note_id = #{noteId}     
      <if test="sidx != null and sord != null">
        ORDER BY ${sidx} ${sord}
      </if>
      <if test="rows != null and page != null">
        ) A1
    )
    WHERE PAGENUM = #{page}
    </if>   
  </select>
  
  <!-- 엑셀 다운로드  -->
  <!-- <select id="excelList" parameterType="map" resultType="map"> -->
  <select id="excelList" parameterType="map" resultMap="messageSearchResult"> 
    SELECT 
          msg_kind
        , snd_ttl 
        <!-- , DBMS_LOB.SUBSTR(REGEXP_REPLACE(note_cntn, <![CDATA['<[^>]*>|\&([^;])*;']]> , ''), 40, 1) AS note_cntn   -->
        , REGEXP_REPLACE(note_cntn, <![CDATA['<[^>]*>|\&([^;])*;']]> , '') AS note_cntn
        , fl_num
        , snd_dttm
        , DECODE(read_yn,null,'미확인','확인') AS read_yn
        , snd_usr_nm
    FROM
    (

      <if test = "optMsgList.equals('all') or optMsgList.equals('sndMsgList')">
      SELECT LT2.msg_kind
           , LT1.snd_ttl
           , LT1.snd_cont_c AS note_cntn
           , LT2.fl_num
           , LT2.snd_dttm
           , LT2.read_yn AS read_yn
           , LT2.snd_usr_nm
           , LT2.note_id
        FROM om030 LT1
           , ( 
              SELECT DISTINCT 1
                , '수신' AS msg_kind
                , (case when t3.fl_num IS NULL then ' ' else t3.fl_num end) AS fl_num
                , getFormatdate(T1.SND_DT)||' '||getFormatTime(t1.snd_tm) AS snd_dttm
                , nvl2(t2.fst_rd_dt, getFormatdate(T2.fst_rd_dt) || ' ' || getFormatTime(t2.fst_rd_tm), '') AS read_yn
                , t1.snd_usr_nm As snd_usr_nm
                , t1.note_id AS note_id
              FROM om030 t1 
                   left join om031 t2 ON t1.note_id = t2.note_id
                   left join (SELECT tbl_pk, TO_CHAR(COUNT(fl_id)) AS fl_num FROM om019 WHERE tbl_nm = 'om030' GROUP BY tbl_pk) t3 on t3.tbl_pk = to_char(t1.note_id)
              WHERE  t2.rcv_usr_id = #{login_usr_id}
                AND  t2.use_yn = 'Y'
                <if test = "msg_usr_id != null and !msg_usr_id.equals('all')">
                AND t1.snd_usr_id = #{msg_usr_id}
                </if>
                <if test = "tfStartDt != null and !tfStartDt.equals('')">
                AND t1.snd_dt between #{tfStartDt} and #{tfEndDt}
                </if>
                <if test = "tfMsg != null and !tfMsg.equals('')">
                AND t1.snd_cont_c like '%' || #{ tfMsg } || '%'
                </if>
             ) LT2
       WHERE LT1.note_id = LT2.note_id 
      </if>
      <if test = "optMsgList.equals('all')">
      UNION ALL
      </if>
      <if test = "optMsgList.equals('all') or optMsgList.equals('rcvMsgList')">
      SELECT LT2.msg_kind
           , LT1.snd_ttl
           , LT1.snd_cont_c AS note_cntn
           , LT2.fl_num
           , LT2.snd_dttm
            , '' AS read_yn
           , LT2.snd_usr_nm
           , LT2.note_id
        FROM om030 LT1
           , (      
              SELECT DISTINCT 1
                , '발신' AS msg_kind
                , (case when t3.fl_num IS NULL then ' ' else t3.fl_num end) AS fl_num
                , getFormatdate(t1.snd_dt)||' '||getFormatTime(t1.snd_tm) AS snd_dttm
                , t1.snd_usr_nm As snd_usr_nm
                , t1.note_id AS note_id
              FROM  om030 t1 
                    left join om031 t2 ON t1.note_id = t2.note_id
                    left join (SELECT tbl_pk, TO_CHAR(COUNT(fl_id)) AS fl_num FROM om019 WHERE tbl_nm = 'om030' GROUP BY tbl_pk) t3 on t3.tbl_pk = to_char(t1.note_id)
              WHERE  t1.snd_usr_id = #{login_usr_id}
                AND  t1.use_yn = 'Y'
                <if test = "msg_usr_id != null and !msg_usr_id.equals('all')">
                AND t2.rcv_usr_id = #{msg_usr_id}
                </if>
                <if test = "tfStartDt != null and !tfStartDt.equals('')">
                AND t1.snd_dt between #{tfStartDt} and #{tfEndDt}
                </if>
                <if test = "tfMsg != null and !tfMsg.equals('')">
                AND t1.snd_cont_c like '%' || #{ tfMsg } || '%'
                </if>
             ) LT2      
       WHERE LT1.note_id = LT2.note_id      
      </if>
      <if test="sidx != null and sord != null">
      ORDER BY ${sidx} ${sord}
      </if>
    )
    </select>
</mapper>